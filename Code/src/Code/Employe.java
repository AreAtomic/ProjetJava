package Code;public abstract class Employe implements Comparable<Employe>,Payable {    protected String id;    protected String nom;    protected String prenom;    protected int matricule;    protected float indiceSalaire;    public Employe(String id, String nom, String prenom, int matricule, float indiceSalaire) {        this.id = id;        this.nom = nom;        this.prenom = prenom;        this.matricule = matricule;        this.indiceSalaire = indiceSalaire;    }    @Override    public String toString() {        return "Employe{" +                "nom='" + nom + '\'' +                ", prenom='" + prenom + '\'' +                ", matricule=" + matricule +                ", indiceSalaire=" + indiceSalaire +                '}';    }    public String getNom() {        return nom;    }    public String getPrenom() {        return prenom;    }    public int getMatricule() {        return matricule;    }    public float getIndiceSalaire() {        return indiceSalaire;    }    @Override    public int compareTo(Employe o) {        if(this.matricule == (o.matricule)){            return 0;        }        if(Integer.parseInt(String.valueOf(this.id.charAt(1))) < Integer.parseInt(String.valueOf(o.id.charAt(1)))){            return 1;        }        if(Integer.parseInt(String.valueOf(this.id.charAt(1))) == Integer.parseInt(String.valueOf(o.id.charAt(1)))){            if(this.id.length() < o.id.length()){                return 1;            }else if(this.id.length() == o.id.length()){                if(Integer.parseInt(String.valueOf(this.id.charAt(-1))) < Integer.parseInt(String.valueOf(o.id.charAt(-1)))){                    return 1;                }                return -1;            }        }else{            return -1;        }        return -1;    }    @Override    public abstract float CalculSalaire();}